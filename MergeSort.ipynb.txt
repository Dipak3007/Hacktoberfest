import numpy as np

def merge(arr,start,mid,end):
    mergedArray = np.zeros(end-start+1,dtype=np.int64)
    i = start
    j = mid+1
    k = 0
    while i<=mid and j<=end:
        if arr[i] < arr[j]:
            mergedArray[k] = arr[i]
            k = k + 1
            i = i + 1
        else:
            mergedArray[k] = arr[j]
            k =k + 1
            j = j + 1
    while i<=mid:
        mergedArray[k] = arr[i]
        k = k + 1
        i = i + 1
    while j<=end:
        mergedArray[k] = arr[j]
        k = k + 1
        j = j + 1
    
    q = start
    for p in range(len(mergedArray)):
        arr[q] = mergedArray[p]
        q = q + 1
        
def mergeSort(arr,start,end):
    if end <= start:
        return
    mid = start + int((end-start)/2)
    mergeSort(arr,start,mid)
    mergeSort(arr,mid+1,end)
    merge(arr,start,mid,end)
    
# Main Area
arr = [9,8,7,6,5,4,3,2,1]
arr = np.array(arr)

print("Unsorted Array:",arr)
mergeSort(arr,0,len(arr)-1)
print("\nSorted Array:",arr)